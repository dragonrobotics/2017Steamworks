// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/usfirst/frc/team5002/robot/replay.proto

package org.usfirst.frc.team5002.robot.replay;

public interface ReplayOrBuilder extends
    // @@protoc_insertion_point(interface_extends:team5002.Replay)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Actual replay data.
   * </pre>
   *
   * <code>repeated .team5002.ControlState states = 1;</code>
   */
  java.util.List<org.usfirst.frc.team5002.robot.replay.ControlState> 
      getStatesList();
  /**
   * <pre>
   * Actual replay data.
   * </pre>
   *
   * <code>repeated .team5002.ControlState states = 1;</code>
   */
  org.usfirst.frc.team5002.robot.replay.ControlState getStates(int index);
  /**
   * <pre>
   * Actual replay data.
   * </pre>
   *
   * <code>repeated .team5002.ControlState states = 1;</code>
   */
  int getStatesCount();
  /**
   * <pre>
   * Actual replay data.
   * </pre>
   *
   * <code>repeated .team5002.ControlState states = 1;</code>
   */
  java.util.List<? extends org.usfirst.frc.team5002.robot.replay.ControlStateOrBuilder> 
      getStatesOrBuilderList();
  /**
   * <pre>
   * Actual replay data.
   * </pre>
   *
   * <code>repeated .team5002.ControlState states = 1;</code>
   */
  org.usfirst.frc.team5002.robot.replay.ControlStateOrBuilder getStatesOrBuilder(
      int index);

  /**
   * <pre>
   * Frequency of state updates, in Hz
   * </pre>
   *
   * <code>optional double replayFrequency = 2 [default = 30];</code>
   */
  boolean hasReplayFrequency();
  /**
   * <pre>
   * Frequency of state updates, in Hz
   * </pre>
   *
   * <code>optional double replayFrequency = 2 [default = 30];</code>
   */
  double getReplayFrequency();

  /**
   * <pre>
   * Battery level at the beginning of the recording session, in volts.
   * </pre>
   *
   * <code>optional double replayBatteryLevel = 3 [default = 12];</code>
   */
  boolean hasReplayBatteryLevel();
  /**
   * <pre>
   * Battery level at the beginning of the recording session, in volts.
   * </pre>
   *
   * <code>optional double replayBatteryLevel = 3 [default = 12];</code>
   */
  double getReplayBatteryLevel();
}
